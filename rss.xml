<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
        <title>SuiYan 碎言博客</title>
        <link>https://suiyan.cc/</link>
        <description>SuiYan 碎言博客 最近更新的10篇博文。</description>
        <pubDate>2023-05-28 07:47:12</pubDate>
        
        <item>
            <title>SQLAlchemy的关系字段和Django的关系字段他们的不同点。</title>
            <link>https://suiyan.cc/2023/20230528074712.html</link>
            <author>J.sky</author>
            <description>SQLAlchemy和Django都是流行的Python框架，用于处理数据库关系。虽然它们都提供了关系字段的概念，但在实现和使用上有一些不同点。</description>
            <category>Django,SQLAlchemy</category>
            <pubDate>2023-05-28 07:47:12</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(五)Django中常见的关系字段及其示例</title>
            <link>https://suiyan.cc/2023/20230528074013.html</link>
            <author>J.sky</author>
            <description>Django是一个使用Python编写的开源Web应用程序框架，它提供了一种方便的方式来处理数据库关系。Django的关系字段允许你在模型之间建立各种类型的关联关系，如一对一、一对多和多对多关系。以下是Django中常见的关系字段及其示例。</description>
            <category>Django</category>
            <pubDate>2023-05-28 07:40:13</pubDate>
        </item>
        
        <item>
            <title>css实现漂亮的彩虹渐变文本效果</title>
            <link>https://suiyan.cc/2023/20230527070832.html</link>
            <author>J.sky</author>
            <description>这段代码的效果是，为h1标签设置一个彩虹渐变的背景，并使文本颜色透明，从而实现彩虹渐变的文本效果。</description>
            <category>CSS</category>
            <pubDate>2023-05-27 07:08:32</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(四)数据的查询Django的ORM</title>
            <link>https://suiyan.cc/2023/20230525084144.html</link>
            <author>J.sky</author>
            <description>Django的ORM操作非常简答，几乎把所有你能想到的数据库的操作都封装了，即便没有你需要的，也可以使用原生的SQL语句进行查询。</description>
            <category>Django</category>
            <pubDate>2023-05-25 08:41:44</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(三)Model模型字段</title>
            <link>https://suiyan.cc/2023/20230524211340.html</link>
            <author>J.sky</author>
            <description>Django的ORM在Python中算是数一数二的，使用起来非常的简单和丝滑，文档也写的简单直观，相对于SQLAlchemy有过之而无不及。</description>
            <category>Django</category>
            <pubDate>2023-05-24 21:13:40</pubDate>
        </item>
        
        <item>
            <title>vite打包后element样式被其他框架样式覆盖的解决方法</title>
            <link>https://suiyan.cc/2023/20230522201800.html</link>
            <author>J.sky</author>
            <description>今天打包一个项目，发现element button 样式被其他矿建的样式覆盖了，项目里还使用了`tailwindcss`，当时打包的时候提示文件大小超过了默认值，我就修改了vite build的配置项chunkSizeWarningLimit,并且使文件分开打包，然后就发现element的样式后边始终跟随一个样式表，会覆盖element button的背景颜色的样式，网上搜了很多方法都没有效果。</description>
            <category>vite</category>
            <pubDate>2023-05-22 20:18:00</pubDate>
        </item>
        
        <item>
            <title>如何解决 Some chunks are larger than 500 KiB after minification？</title>
            <link>https://suiyan.cc/2023/20230522201116.html</link>
            <author>J.sky</author>
            <description>解决vite打包超出默认值，出现警告的错误。</description>
            <category>vite</category>
            <pubDate>2023-05-22 20:11:16</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(二)编写和调试Model模型</title>
            <link>https://suiyan.cc/2023/20230520081153.html</link>
            <author>J.sky</author>
            <description>对于web应用的编写应该从哪里开始呢？如果包含了数据的增删改查，那么对于使用Django开发web应用来说，从模型(Model)开始最好不过了。模型准确且唯一的描述了数据。它包含您储存的数据的重要字段和行为。一般来说，每一个模型都映射一张数据库表。</description>
            <category>Django</category>
            <pubDate>2023-05-20 08:11:53</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(一)迅速概览</title>
            <link>https://suiyan.cc/2023/20230518092845.html</link>
            <author>J.sky</author>
            <description>许多年前曾经接触过Django，那时候还是1.X版本，现在都到了4.2版本了。今天抽空复习一下有关Django的相关技术要点。</description>
            <category>Django</category>
            <pubDate>2023-05-18 09:28:45</pubDate>
        </item>
        
        <item>
            <title>使用Python编写并部署第一个自己的静态独立技术博客:(三)搜集博客数据</title>
            <link>https://suiyan.cc/2023/20230517084718.html</link>
            <author>J.sky</author>
            <description>博客的静态页面的生成都是由博客的基础数据支撑的，搜集博客的基本信息和博客文章数据，是生成博客静态文件的核心功能。</description>
            <category>Python,碎言博客</category>
            <pubDate>2023-05-17 08:47:18</pubDate>
        </item>
        
    </channel>
</rss>