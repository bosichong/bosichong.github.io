<?xml version="1.0" encoding="UTF-8" ?>
<rss version="2.0">
    <channel>
        <title>SuiYan 碎言博客</title>
        <link>https://suiyan.cc/</link>
        <description>SuiYan 碎言博客 最近更新的10篇博文。</description>
        <pubDate>2023-05-24 21:13:40</pubDate>
        
        <item>
            <title>Django 4.2 复习笔记(三)Model模型字段</title>
            <link>https://suiyan.cc/2023/20230524211340.html</link>
            <author>J.sky</author>
            <description>Django的ORM在Python中算是数一数二的，使用起来非常的简单和丝滑，文档也写的简单直观，相对于SQLAlchemy有过之而无不及。</description>
            <category>Django</category>
            <pubDate>2023-05-24 21:13:40</pubDate>
        </item>
        
        <item>
            <title>vite打包后element样式被其他框架样式覆盖的解决方法</title>
            <link>https://suiyan.cc/2023/20230522201800.html</link>
            <author>J.sky</author>
            <description>今天打包一个项目，发现element button 样式被其他矿建的样式覆盖了，项目里还使用了`tailwindcss`，当时打包的时候提示文件大小超过了默认值，我就修改了vite build的配置项chunkSizeWarningLimit,并且使文件分开打包，然后就发现element的样式后边始终跟随一个样式表，会覆盖element button的背景颜色的样式，网上搜了很多方法都没有效果。</description>
            <category>vite</category>
            <pubDate>2023-05-22 20:18:00</pubDate>
        </item>
        
        <item>
            <title>如何解决 Some chunks are larger than 500 KiB after minification？</title>
            <link>https://suiyan.cc/2023/20230522201116.html</link>
            <author>J.sky</author>
            <description>解决vite打包超出默认值，出现警告的错误。</description>
            <category>vite</category>
            <pubDate>2023-05-22 20:11:16</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(二)编写和调试Model模型</title>
            <link>https://suiyan.cc/2023/20230520081153.html</link>
            <author>J.sky</author>
            <description>对于web应用的编写应该从哪里开始呢？如果包含了数据的增删改查，那么对于使用Django开发web应用来说，从模型(Model)开始最好不过了。模型准确且唯一的描述了数据。它包含您储存的数据的重要字段和行为。一般来说，每一个模型都映射一张数据库表。</description>
            <category>Django</category>
            <pubDate>2023-05-20 08:11:53</pubDate>
        </item>
        
        <item>
            <title>Django 4.2 复习笔记(一)迅速概览</title>
            <link>https://suiyan.cc/2023/20230518092845.html</link>
            <author>J.sky</author>
            <description>许多年前曾经接触过Django，那时候还是1.X版本，现在都到了4.2版本了。今天抽空复习一下有关Django的相关技术要点。</description>
            <category>Django</category>
            <pubDate>2023-05-18 09:28:45</pubDate>
        </item>
        
        <item>
            <title>使用Python编写并部署第一个自己的静态独立技术博客:(三)搜集博客数据</title>
            <link>https://suiyan.cc/2023/20230517084718.html</link>
            <author>J.sky</author>
            <description>博客的静态页面的生成都是由博客的基础数据支撑的，搜集博客的基本信息和博客文章数据，是生成博客静态文件的核心功能。</description>
            <category>Python,碎言博客</category>
            <pubDate>2023-05-17 08:47:18</pubDate>
        </item>
        
        <item>
            <title>一款基于GitHub的评论系统不但免费安装还贼简单！</title>
            <link>https://suiyan.cc/2023/20230516211444.html</link>
            <author>J.sky</author>
            <description>这几天一直琢磨这给博客文章页面添加个第三方的评论系统，最好是免费的，然后就搜到了`giscus`，从安装到使用，用一个字来评价：真特么绝！</description>
            <category>giscus</category>
            <pubDate>2023-05-16 21:14:44</pubDate>
        </item>
        
        <item>
            <title>使用Moment.js或Day.js对HTML页面上的时间进行格式化</title>
            <link>https://suiyan.cc/2023/20230516132817.html</link>
            <author>J.sky</author>
            <description>一直想对博客页面的时间进行格式化，把标准的时间格式修改成XX时间前或相对时间，因为时间已经直接输出到了页面DOM中，所以考虑直接使用相关的js库来实现比较方便，搜了一下发现二个JavaScript的时间处理库比较不错，他们是：`Moment.js`和`Day.js`。</description>
            <category>Moment.js,Day.js</category>
            <pubDate>2023-05-16 13:28:17</pubDate>
        </item>
        
        <item>
            <title>async/await和fetch()的使用</title>
            <link>https://suiyan.cc/2023/20230515215136.html</link>
            <author>J.sky</author>
            <description>async和await关键字让我们可以用一种更简洁的方式写出基于 Promise 的异步行为，而无需刻意地链式调用 promise。而FetchAPI可以通过网络访问资源，您可以发出HTTP请求（使用GET和POST其他方法）、下载和上传文件。</description>
            <category>JavaScript,fetch,async,await</category>
            <pubDate>2023-05-15 21:51:36</pubDate>
        </item>
        
        <item>
            <title>fetch()如何读取请求中的'user-agent'？</title>
            <link>https://suiyan.cc/2023/20230515105053.html</link>
            <author>J.sky</author>
            <description>但是添加后我想测试一下看看请求中headers是否添加了`fetch()如何读取请求中的'user-agent'？`,本来希望打印`response`中的herders来查看`'user-agent'`是否伪装成功，直接在fetch的response中遍历headers是无法获得`'user-agent'`这个属性。所以只好搭建一个临时服务器端来打印请求的request。</description>
            <category>JavaScript,fetch,request</category>
            <pubDate>2023-05-15 10:50:53</pubDate>
        </item>
        
    </channel>
</rss>